name: aml-deploy

on:
  workflow_dispatch:
    inputs:
      test:
        description: "Deploy to test environment? true|false"
        required: false
        default: "false"
      dev:
        description: "Deploy to dev environment? true|false"
        required: false
        default: "false"
      prd:
        description: "Deploy to prd environment? true|false"
        required: false
        default: "false"
      model-name:
        description: "Name of the model to deploy to"
        required: true
      model-version:
        description: "Version of the model to deploy to"
        required: false
        default: "1"
      repository:
        description: "The repository from which the slash command was dispatched"
        required: true
      comment-id:
        description: "The comment-id of the slash command"
        required: true
      issue-number:
        description: "The issue number from which the slash command was created"
        required: false
      # todo: in the workflow, if git-ref not provided from input, use ${{ github.ref }}
      git-ref:
        description: "The ref of git branch that triggered the event"
        required: false

concurrency: deploy-${{ github.ref }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Check variables
        env:
          PAYLOAD_CONTEXT: ${{ toJson(github.event.client_payload.slash_command) }}
        run: |
          if [ -z "${{ github.event.client_payload.slash_command.model-name }}"]; then echo "model-name is NULL"; exit 1; else echo "model-name is ${{ toJson(github.event.client_payload.slash_command.model-name) }}"; fi;
          if [ -z "${{ github.event.client_payload.slash_command.model-version }}"]; then echo "model-version is NULL"; exit 1; else echo "model-version is ${{ toJson(github.event.client_payload.slash_command.model-version) }}"; fi;
          
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Check Out Repository
        id: checkout_repository
        uses: actions/checkout@v2
        with:
          ref: $${{ github.event.inputs.git-ref }}

      - name: Debug
        run: echo $${{ github.event.inputs.git-ref }}

      - name: Create URL to the run output
        id: vars
        run: echo ::set-output name=run-url::https://github.com/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID

#      - name: Create comment
#        uses: peter-evans/create-or-update-comment@v1
#        with:
#          token: ${{ secrets.REPO_ACCESS_TOKEN }}
#          issue-number: ${{ github.event.client_payload.github.payload.issue.number }}
#          body: |
#            @${{ github.event.client_payload.github.actor }} Just submit a deploy request.
#            [Click here to see the deploy run output](${{ steps.vars.outputs.run-url }})

      - name: Create comment
        uses: unsplash/comment-on-pr@master
        env:
          GITHUB_TOKEN: ${{ secrets.REPO_ACCESS_TOKEN }}
        with:
          msg: |
            @${{ github.event.client_payload.github.actor }} Just submit a deploy request.
            [Click here to see the deploy run output](${{ steps.vars.outputs.run-url }})

      # Connect or Create the Azure Machine Learning Workspace
      - name: Connect/Create Azure Machine Learning Workspace
        id: aml_workspace
        uses: Azure/aml-workspace@v1
        with:
            azure_credentials: ${{ secrets.AZURE_CREDENTIALS }}

      # Test your model (this is optional)
      - name: Test Model
        if: github.event.inputs.test == 'true'
        id: aml_test
        uses: Azure/aml-deploy@v1
        with:
            azure_credentials: ${{ secrets.AZURE_CREDENTIALS }}
            model-name:  ${{ github.event.inputs.model-name }}
            model-version: ${{ github.event.inputs.model-version }}

      # Deploy your model to dev (this is optional)
      - name: Dev Deploy
        if: github.event.inputs.dev == 'true'
        id: aml_dev_deploy
        uses: Azure/aml-deploy@v1
        with:
            azure_credentials: ${{ secrets.AZURE_CREDENTIALS }}
            model-name:  ${{ github.event.inputs.model-name }}
            model-version: ${{ github.event.inputs.model-version }}
            parameters_file: "dev_aks.json"

      # Deploy your model to production
      - name: Prod Deploy
        if: github.event.inputs.prd == 'true'
        id: aml_prod_deploy
        uses: Azure/aml-deploy@v1
        with:
            azure_credentials: ${{ secrets.AZURE_CREDENTIALS }}
            model-name:  ${{ github.event.inputs.model-name }}
            model-version: ${{ github.event.inputs.model-version }}
            parameters_file: "prod_aks.json"

      - name: Create comment
        uses: unsplash/comment-on-pr@master
        env:
          GITHUB_TOKEN: ${{ secrets.REPO_ACCESS_TOKEN }}
        with:
          msg: |
            scoring-endpoint: ${{ steps.aml_prod_deploy.outputs.service_scoring_uri}}
            swagger-uri: ${{ steps.aml_prod_deploy.outputs.service_swagger_uri}}
